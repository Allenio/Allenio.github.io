{"title":"Git是什么？","uid":"079ca4b962925da31ee3129301d8960d","slug":"Git是什么","date":"2021-06-28T10:41:13.000Z","updated":"2021-06-28T10:41:51.923Z","comments":true,"path":"api/articles/Git是什么.json","keywords":null,"cover":null,"content":"<h1 id=\"Git是什么？\"><a href=\"#Git是什么？\" class=\"headerlink\" title=\"Git是什么？\"></a>Git是什么？</h1><p>&emsp;&emsp;Git是目前世界上最先进的分布式版本控制系统。</p>\n<h2 id=\"什么是版本控制系统？\"><a href=\"#什么是版本控制系统？\" class=\"headerlink\" title=\"什么是版本控制系统？\"></a>什么是版本控制系统？</h2><p>&emsp;&emsp;能自动帮助记录每次文件的改动，还可以让他人协作编辑。</p>\n<h2 id=\"Git的诞生\"><a href=\"#Git的诞生\" class=\"headerlink\" title=\"Git的诞生\"></a>Git的诞生</h2><p>&emsp;&emsp;很多人都知道，Linus在1991年创建了开源的Linux，从此，Linux系统不断发展，已经成为最大的服务器系统软件了。</p>\n<p>&emsp;&emsp;Linus虽然创建了Linux，但Linux的壮大是靠全世界热心的志愿者参与的，这么多人在世界各地为Linux编写代码，那Linux的代码是如何管理的呢？</p>\n<p>&emsp;&emsp;事实是，在2002年以前，世界各地的志愿者把源代码文件通过diff的方式发给Linus，然后由Linus本人通过手工方式合并代码！</p>\n<p>&emsp;&emsp;你也许会想，为什么Linus不把Linux代码放到版本控制系统里呢？不是有CVS、SVN这些免费的版本控制系统吗？因为Linus坚定地反对CVS和SVN，这些集中式的版本控制系统不但速度慢，而且必须联网才能使用。有一些商用的版本控制系统，虽然比CVS、SVN好用，但那是付费的，和Linux的开源精神不符。</p>\n<p>&emsp;&emsp;不过，到了2002年，Linux系统已经发展了十年了，代码库之大让Linus很难继续通过手工方式管理了，社区的弟兄们也对这种方式表达了强烈不满，于是Linus选择了一个商业的版本控制系统BitKeeper，BitKeeper的东家BitMover公司出于人道主义精神，授权Linux社区免费使用这个版本控制系统。</p>\n<p>&emsp;&emsp;安定团结的大好局面在2005年就被打破了，原因是Linux社区牛人聚集，不免沾染了一些梁山好汉的江湖习气。开发Samba的Andrew试图破解BitKeeper的协议（这么干的其实也不只他一个），被BitMover公司发现了（监控工作做得不错！），于是BitMover公司怒了，要收回Linux社区的免费使用权。</p>\n<p>&emsp;&emsp;Linus可以向BitMover公司道个歉，保证以后严格管教弟兄们，嗯，这是不可能的。实际情况是这样的：</p>\n<p>&emsp;&emsp;Linus花了两周时间自己用C写了一个分布式版本控制系统，这就是Git！一个月之内，Linux系统的源码已经由Git管理了！牛是怎么定义的呢？大家可以体会一下。</p>\n<p>&emsp;&emsp;Git迅速成为最流行的分布式版本控制系统，尤其是2008年，GitHub网站上线了，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等等。</p>\n<p>&emsp;&emsp;历史就是这么偶然，如果不是当年BitMover公司威胁Linux社区，可能现在我们就没有免费而超级好用的Git了。</p>\n<h2 id=\"集中式和分布式\"><a href=\"#集中式和分布式\" class=\"headerlink\" title=\"集中式和分布式\"></a>集中式和分布式</h2><h3 id=\"集中式版本控制系统\"><a href=\"#集中式版本控制系统\" class=\"headerlink\" title=\"集中式版本控制系统\"></a>集中式版本控制系统</h3><p>&emsp;&emsp;集中式版本控制系统，版本库是集中存放在中央服务器，工作时，用的都是自己的电脑，所以要先从中央服务器取得最新的版本，然后工作完再把做完的推送给中央服务器。<br><em>ps:中央服务器就好比是一个图书馆，你要改一本书，必须先从图书馆借出来，然后回到家自己改，改完了，再放回图书馆。</em><br>&emsp;&emsp;集中式版本控制系统最大的毛病就是必须联网才能工作，上传快慢取决于网速。</p>\n<h3 id=\"分布式版本控制系统\"><a href=\"#分布式版本控制系统\" class=\"headerlink\" title=\"分布式版本控制系统\"></a>分布式版本控制系统</h3><p>&emsp;&emsp;分布式版本控制系统根本没有“中央服务器”，每个人的电脑上都是一个完整的版本库，这样，工作时就不需要联网了，因为版本库就在自己的电脑上。比方说你在自己电脑上改了文件A，你的同事也在他的电脑上改了文件A，这时，你们俩之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。</p>\n<p>&emsp;&emsp;和集中式版本控制系统相比，分布式版本控制系统的安全性要高很多，因为每个人电脑里都有完整的版本库，某一个人的电脑坏掉了不要紧，随便从其他人那里复制一个就可以了。而集中式版本控制系统的中央服务器要是出了问题，所有人都没法干活了。</p>\n<p>&emsp;&emsp;在实际使用分布式版本控制系统的时候，其实很少在两人之间的电脑上推送版本库的修改，因为可能你们俩不在一个局域网内，两台电脑互相访问不了，也可能今天你的同事病了，他的电脑压根没有开机。因此，分布式版本控制系统通常也有一台充当“中央服务器”的电脑，但这个服务器的作用仅仅是用来方便“交换”大家的修改，没有它大家也一样干活，只是交换修改不方便而已。</p>\n<p>&emsp;&emsp;Git的优势不单是不必联网这么简单，后面我们还会看到Git极其强大的分支管理，把SVN等远远抛在了后面。</p>\n","feature":true,"text":"Git是什么？&emsp;&emsp;Git是目前世界上最先进的分布式版本控制系统。 什么是版本控制系统？&emsp;&emsp;能自动帮助记录每次文件的改动，还可以让他人协作编辑。 Git的诞生&emsp;&emsp;很多人都知道，Linus在1991年创建了开源的Linux，...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"Git","slug":"Git","count":1,"path":"api/categories/Git.json"}],"tags":[{"name":"Git学习","slug":"Git学习","count":1,"path":"api/tags/Git学习.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Git%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">Git是什么？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F%EF%BC%9F\"><span class=\"toc-text\">什么是版本控制系统？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Git%E7%9A%84%E8%AF%9E%E7%94%9F\"><span class=\"toc-text\">Git的诞生</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9B%86%E4%B8%AD%E5%BC%8F%E5%92%8C%E5%88%86%E5%B8%83%E5%BC%8F\"><span class=\"toc-text\">集中式和分布式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9B%86%E4%B8%AD%E5%BC%8F%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">集中式版本控制系统</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E5%B8%83%E5%BC%8F%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">分布式版本控制系统</span></a></li></ol></li></ol></li></ol>","author":{"name":"Allen Yang","slug":"blog-author","avatar":"/img/i3.jpg","link":"/","description":"记录学习中的点点滴滴","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"Hello World","uid":"b9663f58f18133b35bfe243f3e916a80","slug":"hello-world","date":"2021-06-26T14:26:30.613Z","updated":"2021-06-26T14:26:30.613Z","comments":true,"path":"api/articles/hello-world.json","keywords":null,"cover":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ...","link":"","photos":[],"count_time":{"symbolsCount":430,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Allen Yang","slug":"blog-author","avatar":"/img/i3.jpg","link":"/","description":"记录学习中的点点滴滴","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}