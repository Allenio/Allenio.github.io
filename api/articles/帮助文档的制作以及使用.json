{"title":"帮助文档的制作以及使用","uid":"028ef52bbaecf50bd1bcb213347b2846","slug":"帮助文档的制作以及使用","date":"2018-12-06T15:50:11.000Z","updated":"2019-04-05T01:04:53.000Z","comments":true,"path":"api/articles/帮助文档的制作以及使用.json","keywords":null,"cover":null,"content":"<h2 id=\"制作工具类的说明书（文档注释）\"><a href=\"#制作工具类的说明书（文档注释）\" class=\"headerlink\" title=\"制作工具类的说明书（文档注释）\"></a>制作工具类的说明书（文档注释）</h2><p>文档注释格式：</p>\n<pre><code>/**\n*\n*\n*\n*\n*\n*\n*/\n</code></pre>\n<p>字段</p>\n<p>@author  (作者)<br>@version (版本)<br>@param   (参数)<br>@return  (返回值)</p>\n<h2 id=\"javadoc\"><a href=\"#javadoc\" class=\"headerlink\" title=\"javadoc\"></a>javadoc</h2><p>格式：</p>\n<pre><code>javadoc -d 目录 -author -version XXXX.java\n</code></pre>\n<p>目录：可以写一个文件夹的路径<br>注释文档中不需要写类型</p>\n<p>制作帮助文档出错：<br>找不到可以文档化的公共或受保护的类：告诉我们类的权限不够。 （一般给类加上public就可以了）</p>\n<h2 id=\"如何使用帮助文档-JDK-API-1-6-0-中文版为例\"><a href=\"#如何使用帮助文档-JDK-API-1-6-0-中文版为例\" class=\"headerlink\" title=\"如何使用帮助文档(JDK API 1.6.0 中文版为例)\"></a>如何使用帮助文档(JDK API 1.6.0 中文版为例)</h2><p>以Scanner为例：<br>1.打开帮助文档<br>2.点击显示，找到索引，看到输入框<br>3.在输入框里面输入Scanner，然后回车<br>4.看包<br>&emsp;java.lang包下的类不需要导入，其他的全部需要导入。<br>&emsp;Scanner在java.unil下需要导入：<br>&emsp;java.util.Scanner<br>5.看类的注释和说明还有举例，以及类的版本。<br>6.看类的结构<br>&emsp;成员方法—字段摘要<br>&emsp;构造方法—构造方法摘要<br>&emsp;成员方法—方法摘要<br>7.学习构造方法<br>&emsp;A:有构造方法    就创建对象<br>&emsp;B:没有构造方法    成员可能都是静态的<br>8.看成员方法<br>&emsp;A:左边<br>&emsp;&emsp;是否静态：如果静态，可以通过类名调用。<br>&emsp;&emsp;返回值类型：返回什么，就用什么接受。<br>&emsp;B:右边<br>&emsp;&emsp;看方法名：方法名称不能写错。<br>&emsp;&emsp;参数列表：需要什么就给什么，需要几个就给几个。</p>\n","text":"制作工具类的说明书（文档注释）文档注释格式： /** * * * * * * */ 字段 @author (作者)@version (版本)@param (参数)@return (返回值) javadoc格式： javadoc -d 目录 -author -version XXX...","link":"","photos":[],"count_time":{"symbolsCount":698,"symbolsTime":"1 mins."},"categories":[{"name":"Java","slug":"Java","count":22,"path":"api/categories/Java.json"}],"tags":[{"name":"Java学习总结","slug":"Java学习总结","count":21,"path":"api/tags/Java学习总结.json"},{"name":"面向对象","slug":"面向对象","count":7,"path":"api/tags/面向对象.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%B6%E4%BD%9C%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%9A%84%E8%AF%B4%E6%98%8E%E4%B9%A6%EF%BC%88%E6%96%87%E6%A1%A3%E6%B3%A8%E9%87%8A%EF%BC%89\"><span class=\"toc-text\">制作工具类的说明书（文档注释）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#javadoc\"><span class=\"toc-text\">javadoc</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3-JDK-API-1-6-0-%E4%B8%AD%E6%96%87%E7%89%88%E4%B8%BA%E4%BE%8B\"><span class=\"toc-text\">如何使用帮助文档(JDK API 1.6.0 中文版为例)</span></a></li></ol>","author":{"name":"Allen Yang","slug":"blog-author","avatar":"/img/i3.jpg","link":"/","description":"记录学习中的点点滴滴","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"代码块","uid":"efa8c010c59ff382983a4c1b80223f3a","slug":"代码块","date":"2018-12-07T02:42:11.000Z","updated":"2019-04-05T01:04:38.000Z","comments":true,"path":"api/articles/代码块.json","keywords":null,"cover":null,"text":"代码块在Java中，使用{}括起来的代码被称为代码块，根据其位置和声明的不同，可以分为局部代码块，构造代码块，静态代码块，同步代码块。 局部代码块在方法中出现；限定变量生命周期，及早释放，提高内存利用率。 public static void main(String[] args...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"Java","slug":"Java","count":22,"path":"api/categories/Java.json"}],"tags":[{"name":"Java学习总结","slug":"Java学习总结","count":21,"path":"api/tags/Java学习总结.json"},{"name":"面向对象","slug":"面向对象","count":7,"path":"api/tags/面向对象.json"}],"author":{"name":"Allen Yang","slug":"blog-author","avatar":"/img/i3.jpg","link":"/","description":"记录学习中的点点滴滴","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"面向对象","uid":"43b177c0ef2e494c11cddc986521f4d9","slug":"面向对象","date":"2018-12-06T15:03:21.000Z","updated":"2021-06-28T15:29:40.784Z","comments":true,"path":"api/articles/面向对象.json","keywords":null,"cover":[],"text":"面向对象面向对象思想面向对象是基于面向过程面向过程:强调的是每一个功能的步骤.面向对象:强调的是对象,然后由对象去调用功能(强调结果). 面向对象特点A:是一种更符合我们思想习惯的思想.B:可以将复杂的事情简单化.C:将我们以执行者变成指挥者.eg:自己去打水变成让别人去打水. ...","link":"","photos":[],"count_time":{"symbolsCount":"7.1k","symbolsTime":"6 mins."},"categories":[{"name":"Java","slug":"Java","count":22,"path":"api/categories/Java.json"}],"tags":[{"name":"Java学习总结","slug":"Java学习总结","count":21,"path":"api/tags/Java学习总结.json"},{"name":"面向对象","slug":"面向对象","count":7,"path":"api/tags/面向对象.json"}],"author":{"name":"Allen Yang","slug":"blog-author","avatar":"/img/i3.jpg","link":"/","description":"记录学习中的点点滴滴","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}